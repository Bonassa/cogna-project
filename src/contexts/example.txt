// import React, { useState, useEffect, createContext } from 'react';
// import { auth, firestore } from '../services/firebaseConnection';
// import { 
//   signInWithEmailAndPassword, 
//   createUserWithEmailAndPassword, 
//   signOut as signOutFromFirebase, 
//   UserCredential, 
//   AuthError
// } from 'firebase/auth';
// import { doc, getDoc, setDoc } from 'firebase/firestore';
// import * as SecureStore from 'expo-secure-store';

// type SignInData = {
//   email: string;
//   password: string;
// }

// type SignUpData = {
//   email: string;
//   password: string;
//   name: string;
// }

// export type UserType = {
//   uid: string;
//   nome: string;
//   email: string;
//   avatarUrl: string | null;
//   acesso: string;
// }

// type AuthContextType = {
//   isAuthenticated: boolean;
//   user: UserType | null;
//   setUser: React.Dispatch<React.SetStateAction<UserType | null>>;
//   loading: boolean;
//   loadingAuth: boolean;
//   signIn: (data : SignInData) => Promise<void | AuthError>;
//   signUp: (data : SignUpData) => Promise<void>;
//   signOut: () => Promise<void>;
// }

// interface AuthProviderProps {
//   children: any;
// }

// export const AuthContext = createContext({} as AuthContextType);

// export function AuthProvider({ children } : AuthProviderProps){
//   const [user, setUser] = useState<UserType | null>(null);
//   const [loadingAuth, setLoadingAuth] = useState<boolean>(false);
//   const [loading, setLoading] = useState<boolean>(true);

//   useEffect(() => {
//     async function loadUser(){

//       const [userUid, userEmail] = await Promise.all([
//         SecureStore.getItemAsync('SUDOESTE_APP_UID'),
//         SecureStore.getItemAsync('SUDOESTE_APP_EMAIL'),
//       ])

//       if(userUid && userEmail){
//         try {
//           const docUsersRef = doc(firestore, 'users', userUid);
  
//           await getDoc(docUsersRef)
//           .then((snapshot) => {
//             if(snapshot.exists()){
//               let data: UserType = {
//                 uid: snapshot.id,
//                 nome: snapshot.data().nome,
//                 email: userEmail,
//                 avatarUrl: snapshot.data().avatarUrl,
//                 acesso: snapshot.data().acesso
//               }

//               setUser(data);
//             }
//           })
//           .catch( async () => {
//             await Promise.all([
//               SecureStore.deleteItemAsync('SUDOESTE_APP_UID'),
//               SecureStore.deleteItemAsync('SUDOESTE_APP_EMAIL')
//             ])
//             setUser(null);
//           })
//         } catch {
//           await Promise.all([
//             SecureStore.deleteItemAsync('SUDOESTE_APP_UID'),
//             SecureStore.deleteItemAsync('SUDOESTE_APP_EMAIL')
//           ])
//           setUser(null);
//         }
//       }

//       setLoading(false);
//     }

//     loadUser();
//   }, []);

//   async function signIn({ email, password } : SignInData): Promise<void | AuthError>{
//     setLoadingAuth(true);

//     await signInWithEmailAndPassword(auth, email, password)
//     .then( async (value: UserCredential) => {

//       const uid = value.user.uid;
//       const docUsersRef = doc(firestore, 'users', uid);

//       await Promise.all([
//         SecureStore.setItemAsync('SUDOESTE_APP_UID', value.user.uid),
//         SecureStore.setItemAsync('SUDOESTE_APP_EMAIL', value.user.email as string)
//       ])

//       const userProfile = await getDoc(docUsersRef);

//       let data: UserType = {
//         uid: uid,
//         nome: userProfile.data()?.nome,
//         email: value.user.email as string,
//         avatarUrl: userProfile.data()?.avatarUrl,
//         acesso: userProfile.data()?.acesso
//       }

//       setUser(data);
//     })
//     .catch((error: AuthError) => {
//       throw new Error(error.code);
//     })
//     .finally(() => {
//       setLoadingAuth(false);
//     })
//   }

//   async function signUp({ email, name, password } : SignUpData){
//     setLoadingAuth(true);

//     await createUserWithEmailAndPassword(auth, email, password)
//       .then( async (value) => {
//         await Promise.all([
//           SecureStore.setItemAsync('SUDOESTE_APP_UID', value.user.uid),
//           SecureStore.setItemAsync('SUDOESTE_APP_EMAIL', value.user.email as string)
//         ]);

//         await setDoc(doc(firestore, `users/${value.user.uid}`), {
//           nome: name,
//           avatarUrl: null,
//           acesso: 'user'
//         })
//         .then(() => {
//           let data: UserType = {
//             uid: value.user.uid,
//             nome: name,
//             email: value.user.email as string,
//             avatarUrl: null,
//             acesso: 'user'
//           }

//           setUser(data);
//         })
//       })
//       .catch((error : AuthError) => {
//         throw new Error(error.code);
//       })
//       .finally(() => {
//         setLoadingAuth(false)
//       })
//   }

//   async function signOut(){
//     await signOutFromFirebase(auth)
//     .then( async () => {
//       await Promise.all([
//         SecureStore.deleteItemAsync('SUDOESTE_APP_UID'),
//         SecureStore.deleteItemAsync('SUDOESTE_APP_EMAIL')
//       ])

//       setUser(null);
//     })
//   }

//   return(
//     <AuthContext.Provider 
//       value={{ 
//         isAuthenticated: !!user,
//         user,
//         setUser,
//         loading,
//         loadingAuth,
//         signIn,
//         signUp,
//         signOut
//       }}
//     >
//       { children }
//     </AuthContext.Provider>
//   )
// }